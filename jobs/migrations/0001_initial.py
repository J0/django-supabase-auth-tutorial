# Generated by Django 4.1.2 on 2022-12-05 06:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLogEntries',
            fields=[
                ('instance_id', models.UUIDField(blank=True, null=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('payload', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'audit_log_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Identities',
            fields=[
                ('id', models.TextField()),
                ('identity_data', models.JSONField()),
                ('provider', models.TextField(primary_key=True, serialize=False)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.identities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instances',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('raw_base_config', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.instances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MfaAmrClaims',
            fields=[
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('authentication_method', models.TextField()),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth.mfa_amr_claims',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MfaChallenges',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
            ],
            options={
                'db_table': 'auth.mfa_challenges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MfaFactors',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('friendly_name', models.TextField(blank=True, null=True)),
                ('factor_type', models.TextField()),
                ('status', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('secret', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.mfa_factors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RefreshTokens',
            fields=[
                ('instance_id', models.UUIDField(blank=True, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('revoked', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'auth.refresh_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamlProviders',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('entity_id', models.TextField(unique=True)),
                ('metadata_xml', models.TextField()),
                ('metadata_url', models.TextField(blank=True, null=True)),
                ('attribute_mapping', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.saml_providers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamlRelayStates',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('request_id', models.TextField()),
                ('for_email', models.TextField(blank=True, null=True)),
                ('redirect_to', models.TextField(blank=True, null=True)),
                ('from_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.saml_relay_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('version', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth.schema_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('factor_id', models.UUIDField(blank=True, null=True)),
                ('aal', models.TextField(blank=True, null=True)),
                ('not_after', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsoDomains',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('domain', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.sso_domains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsoProviders',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('resource_id', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.sso_providers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsoSessions',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('not_before', models.DateTimeField(blank=True, null=True)),
                ('not_after', models.DateTimeField(blank=True, null=True)),
                ('idp_initiated', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.sso_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('instance_id', models.UUIDField(blank=True, null=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('aud', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('encrypted_password', models.CharField(blank=True, max_length=255, null=True)),
                ('email_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('invited_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('confirmation_sent_at', models.DateTimeField(blank=True, null=True)),
                ('recovery_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('recovery_sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_change_token_new', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('email_change', models.CharField(blank=True, max_length=255, null=True)),
                ('email_change_sent_at', models.DateTimeField(blank=True, null=True)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('raw_app_meta_data', models.JSONField(blank=True, null=True)),
                ('raw_user_meta_data', models.JSONField(blank=True, null=True)),
                ('is_super_admin', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('phone_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('phone_change', models.CharField(blank=True, max_length=15, null=True)),
                ('phone_change_token', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_change_sent_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('email_change_token_current', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('email_change_confirm_status', models.SmallIntegerField(blank=True, null=True)),
                ('banned_until', models.DateTimeField(blank=True, null=True)),
                ('reauthentication_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('reauthentication_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth.users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('salary', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
    ]
